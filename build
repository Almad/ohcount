#!/bin/sh
# Build script for Ohcount.
# Written by Mitchell Foral. mitchell<att>caladbolg.net.

# C compiler and flags
cc="gcc -fPIC -g -Wall -Wno-pointer-to-int-cast -Wno-parentheses"

# Ohcount source files
files="src/sourcefile.c \
       src/detector.c \
       src/licenses.c \
       src/parser.o \
       src/loc.c \
       src/diff.c \
       src/parsed_language.c \
       src/hash/language_hash.c"

# If any src/hash/*.gperf file is newer than the header files (which were
# presumably generated together), regenerate the headers.
build_hash_headers()
{
  if [[ -z `ls src/hash/ | grep "_hash.h$"` ||
        ! -z `find src/hash/*.gperf -newer src/hash/parser_hash.h` ]]
  then
    echo "Generating hash headers"
    sh -c "cd src/hash/ && ./generate_headers" || exit 1
  fi
}

# If src/parser.o does not exist, or if there are Ragel parsers or parser
# header files newer than the existing parser.o, recompile parser.o.
build_parser_o()
{
  if [[ ! -f src/parser.o ||
        ! -z `find src/parsers/*.{h,rl} -newer src/parser.o` ]]
  then
    sh -c "cd src/parsers/ && ./compile" || exit 1
    echo "Building src/parser.c (will take a while)"
    sh -c "$cc -c src/parser.c -o src/parser.o" || exit 1
  fi
}

build_shared()
{
  build_hash_headers
  build_parser_o
  if [[ ! -f src/libohcount.so ||
        ! -z `find src/*.{h,c} -newer src/libohcount.so` ]]
  then
    echo "Building shared library"
    sh -c "$cc -shared $files -o src/libohcount.so" || exit 1
  fi
}

build_ohcount()
{
  build_hash_headers
  build_parser_o
  echo "Building Ohcount"
  mkdir -p bin/
  sh -c "$cc src/ohcount.c $files -o bin/ohcount -lpcre" || exit 1
}

build_test_suite()
{
  build_hash_headers
  build_parser_o
  echo "Building test suite"
  sh -c "$cc test/unit/all_tests.c $files -o test/unit/run_tests -lpcre" \
    || exit 1
}

run_test_suite()
{
  echo "Running test suite"
  sh -c "cd test/unit/ && ./run_tests"
}

build_ruby_bindings()
{
  echo "Generating Ruby bindings"
  sh -c "swig -ruby -o ruby/ohcount_wrap.c ruby/ohcount.i" || exit 1
  sh -c "$cc -shared ruby/ohcount_wrap.c $files -o ruby/ohcount.so \
    -I/usr/lib/ruby/1.8/x86_64-linux/ -lpcre" || exit 1
  sh -c "cd test/unit/gestalt && ruby gestalt_test.rb"
}

if [ $# -eq 0 ] || [ $1 == "all" ]
then
  build_ohcount
  build_test_suite
  run_test_suite
  echo $success
elif [ $1 == "shared" ]
then
  build_shared
  echo "Build successful; libohcount.so is in src/"
elif [ $1 == "ohcount" ]
then
  build_ohcount
  echo "Build successful; ohcount is in bin/"
elif [ $1 == "tests" ]
then
  build_test_suite
  run_test_suite
elif [ $1 == "ruby" ]
then
  build_ruby_bindings
  echo "Build successful; ohcount.so is in ruby/"
elif [ $1 == "clean" ]
then
  rm src/libohcount.so
  rm bin/ohcount
  rm test/unit/run_tests
  rm src/parser.o
  rm src/parsers/*.h
  rm src/hash/*.h
  rm src/hash/*.c
  rm ruby/ohcount.so
else
  echo "Usage: build [all|ohcount|shared|tests|ruby|clean]"
fi
