package com.fake
{
import flash.utils.*;
public dynamic class FakeObject extends Proxy
{
[Transient] public var className:String;
[Transient] public var ClassRef:Class;
private var __item:Array;
public function FakeObject()
{
getClassInfo();
__item = new Array();
}
private function getClassInfo():void
{
var qcName:Array = getQualifiedClassName(this).split("::");
className = qcName[1];
var classPath:String = getQualifiedClassName(this).replace( "::", "." );
ClassRef = getDefinitionByName(classPath) as Class;
}
override flash_proxy function callProperty(method: *, ...args):*
{
try
{
return ClassRef.prototype[method].apply(method, args);
}
catch (e:Error)
{
return overload(method, args);
}
}
protected function overload(method:*, args:Array):void
{
}
override flash_proxy function getProperty(name:*):*
{
return overloadGetProperty(name);
}
protected function overloadGetProperty(name:*):*
{
return __item[name];
}
override flash_proxy function setProperty(name:*, value:*):void
{
overloadSetProperty(name, value)
}
protected function overloadSetProperty(name:*, value:*):void
{
__item[name] = value;
}
override flash_proxy function hasProperty(name:*):Boolean
{
if (__item[name])
{
return true;
}
return false;
}
}
}
