;;; CrapsSim.lsp
;;; The main purpose of this program was to implement a Craps game, using a language that we have just
;;; learned.  Also, it was written in a functional style with almost no reliance on the assignment
;;; operation.  Only one local variable called THROW was used.
;;; ====================================================================================================== ;;;
;;; ======================================= CRAPS SIMULATION ============================================= ;;;
;;; ====================================================================================================== ;;;
;;; ** This function takes no parameters as input and returns a random number between 1 and 6. **
;;; ====================================================================================================== ;;;
;;; ** This function takes no parameters as input and returns a LIST with two numbers between 1 and 6. **
;;; ====================================================================================================== ;;;
;;; ** This function takes two numbers as parameters for input and returns T or Nil.  T is returned if both
;;;    numbers are equal to 6.  Nil is returned otherwise. **
;;; ====================================================================================================== ;;;
;;; ** This function takes two numbers as parameters for input and returns T or Nil.  T is returned if both
;;;    numbers are equal to 1.  Nil is returned otherwise. **
;;; ====================================================================================================== ;;;
;;; ** This function takes two numbers as parameters for input and returns T or Nil.  T is returned if the 
;;;    sum of both numbers is equal to a 7 or 11.  Nil is returned otherwise. **
;;; ====================================================================================================== ;;;
;;; ** This function takes two numbers as parameters for input and returns T or Nil.  T is returned if the 
;;;    sum of both numbers is equal to a 2, 3 or 12.  Nil is returned otherwise. **
;;; ====================================================================================================== ;;;
;;; ** This function takes two numbers as parameters for input and returns a string.  If function BOXCARS_P
;;;    returns T, then the returned string equals BOXCARS.  If function SNAKE_EYES_P returns T, then the 
;;;    returned string equals SNAKE_EYES.  The string contains Nil otherwise. **
;;; ====================================================================================================== ;;;
;;; ** This is the main function used to simulate the game of craps.  Variable THROW contains a LIST of two
;;;    numbers between 1 and 6.  The numbers located in THROW, are used as parameters for the other functions.
;;;    The several pieces used for output are listed together and then the LIST is returned from this 
;;;    function.
;;; if roll is a win, then LIST the appropriate output
;;; if roll is a loss, then check for BOXCARS or SNAKE-EYES
;;; else include the BOXCARS or SNAKE-EYES string in the output
;;; if roll is not instant win or loss then output sum of dice
;;; ======================================== END OF PROGRAM CRAPS ======================================== ;;;
